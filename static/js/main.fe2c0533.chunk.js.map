{"version":3,"sources":["graphql/mutations.js","components/AddSong.js","components/Header.js","graphql/subscriptions.js","components/SongList.js","graphql/queries.js","components/QueuedSongList.js","components/SongPlayer.js","reducer.js","App.js","theme.js","graphql/client.js","index.js"],"names":["ADD_OR_REMOVE_FROM_QUEUE","gql","ADD_SONG","useStyles","makeStyles","theme","container","display","alignItems","urlInput","margin","spacing","addSongButton","dialog","textAlign","thumbnail","width","DEFAULT_SONG","duration","title","artist","AddSong","classes","useMutation","addSong","error","React","useState","url","setUrl","playable","setPlayable","setDialog","song","setSong","a","variables","length","handleCloseDialog","console","handleChangeSong","event","target","name","value","prevSong","player","nestedPlayer","getVideoData","songData","getYoutubeInfo","getCurrentSound","getSoundcloudInfo","Promise","resolve","Number","user","username","artwork_url","replace","getDuration","video_id","author","handleError","field","graphQLErrors","extensions","path","includes","useEffect","isPlayable","SoundcloudPlayer","canPlay","YoutubePlayer","className","Dialog","open","onClose","DialogTitle","DialogContent","src","alt","TextField","onChange","label","fullWidth","helperText","DialogActions","Button","onClick","color","variant","placeholder","type","InputProps","startAdornment","InputAdornment","position","Link","disabled","endIcon","AddBoxOutlined","hidden","onReady","marginLeft","Header","AppBar","Toolbar","HeadsetTwoTone","Typography","component","GET_SONGS","songInfoContainer","songInfo","justifyContent","objectFit","height","Song","useContext","SongContext","state","dispatch","id","currentSongPlaying","setCurrentSongPlaying","onCompleted","data","localStorage","setItem","JSON","stringify","addOrRemoveFromQueue","isSongPlaying","isPlaying","Card","CardMedia","image","CardContent","gutterBottom","CardActions","IconButton","payload","size","Pause","PlayArrow","input","__typename","Save","SongList","useSubscription","loading","style","flexDirection","marginTop","CircularProgress","songs","map","GET_QUEUED_SONGS","avatar","text","textOverflow","overflow","gridAutoFlow","gridTemplateColumns","gridGap","whiteSpace","QueuedSong","Avatar","Delete","QueuedSongList","queue","log","useMediaQuery","breakpoints","up","i","details","padding","content","flex","controls","paddingLeft","paddingRight","playIcon","SongPlayer","seconds","useQuery","reactPlayerRef","useRef","played","setPlayed","playedSeconds","setPlayedSeconds","seeking","setSeeking","positionInQueue","setPositionInQueue","songIndex","findIndex","nextSong","SkipPrevious","SkipNext","Date","toISOString","substr","Slider","onMouseDown","onMouseUp","current","seekTo","newValue","min","max","step","ref","onProgress","playing","songReducer","action","createContext","App","initialSongState","useReducer","greaterThanMd","Provider","Grid","paddingTop","item","xs","md","right","top","left","bottom","createMuiTheme","palette","primary","teal","secondary","purple","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","typeDefs","resolvers","Mutation","_","queryResult","readQuery","query","newQueue","some","filter","writeQuery","Boolean","getItem","parse","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.fe2c0533.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\r\n  mutation addOrRemoveFromQueue($input: SongInput!) {\r\n    addOrRemoveFromQueue(input: $input) @client\r\n  }\r\n`;\r\n\r\nexport const ADD_SONG = gql`\r\n  mutation addSong(\r\n    $title: String!\r\n    $artist: String!\r\n    $thumbnail: String!\r\n    $duration: Float!\r\n    $url: String!\r\n  ) {\r\n    insert_songs(\r\n      objects: {\r\n        title: $title\r\n        artist: $artist\r\n        thumbnail: $thumbnail\r\n        duration: $duration\r\n        url: $url\r\n      }\r\n    ) {\r\n      affected_rows\r\n    }\r\n  }\r\n`;\r\n","import { useMutation } from \"@apollo/client\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  InputAdornment,\r\n  TextField,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { AddBoxOutlined, Link } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport SoundcloudPlayer from \"react-player/lib/players/SoundCloud\";\r\nimport YoutubePlayer from \"react-player/lib/players/YouTube\";\r\nimport { ADD_SONG } from \"../graphql/mutations\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  urlInput: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  addSongButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  dialog: {\r\n    textAlign: \"center\",\r\n  },\r\n  thumbnail: {\r\n    width: \"90%\",\r\n  },\r\n}));\r\n\r\nconst DEFAULT_SONG = {\r\n  duration: 0,\r\n  title: \"\",\r\n  artist: \"\",\r\n  thumbnail: \"\",\r\n};\r\n\r\nfunction AddSong() {\r\n  const classes = useStyles();\r\n  const [addSong, { error }] = useMutation(ADD_SONG);\r\n  const [url, setUrl] = React.useState(\"\");\r\n  const [playable, setPlayable] = React.useState(false);\r\n  const [dialog, setDialog] = React.useState(false);\r\n  const [song, setSong] = React.useState(DEFAULT_SONG);\r\n\r\n  React.useEffect(() => {\r\n    const isPlayable =\r\n      SoundcloudPlayer.canPlay(url) || YoutubePlayer.canPlay(url);\r\n    setPlayable(isPlayable);\r\n  }, [url]);\r\n\r\n  async function handleAddSong() {\r\n    try {\r\n      const { url, thumbnail, duration, title, artist } = song;\r\n      await addSong({\r\n        variables: {\r\n          url: url.length > 0 ? url : null,\r\n          thumbnail: thumbnail.length > 0 ? thumbnail : null,\r\n          duration: duration > 0 ? duration : null,\r\n          title: title.length > 0 ? title : null,\r\n          artist: artist.length > 0 ? artist : null,\r\n        },\r\n      });\r\n\r\n      handleCloseDialog();\r\n      setSong(DEFAULT_SONG);\r\n      setUrl(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding song\", error);\r\n    }\r\n  }\r\n\r\n  function handleChangeSong(event) {\r\n    const { name, value } = event.target;\r\n    setSong((prevSong) => ({\r\n      ...prevSong,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  function handleCloseDialog() {\r\n    setDialog(false);\r\n  }\r\n\r\n  async function handleEditSong({ player }) {\r\n    const nestedPlayer = player.player.player;\r\n    let songData;\r\n\r\n    if (nestedPlayer.getVideoData) {\r\n      songData = getYoutubeInfo(nestedPlayer);\r\n    } else if (nestedPlayer.getCurrentSound) {\r\n      songData = await getSoundcloudInfo(nestedPlayer);\r\n    }\r\n\r\n    setSong({ ...songData, url });\r\n  }\r\n\r\n  function getSoundcloudInfo(player) {\r\n    return new Promise((resolve) => {\r\n      player.getCurrentSound((songData) => {\r\n        if (songData) {\r\n          resolve({\r\n            duration: Number(songData.duration / 1000),\r\n            title: songData.title,\r\n            artist: songData.user.username,\r\n            thumbnail: songData.artwork_url.replace(\"-large\", \"-t500x500\"),\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function getYoutubeInfo(player) {\r\n    const duration = player.getDuration();\r\n    const { title, video_id, author } = player.getVideoData();\r\n    const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\r\n    return {\r\n      duration,\r\n      title,\r\n      artist: author,\r\n      thumbnail,\r\n    };\r\n  }\r\n\r\n  function handleError(field) {\r\n    return error?.graphQLErrors[0]?.extensions?.path.includes(field);\r\n  }\r\n\r\n  const { thumbnail, title, artist } = song;\r\n  return (\r\n    <div className={classes.container}>\r\n      <Dialog\r\n        className={classes.dialog}\r\n        open={dialog}\r\n        onClose={handleCloseDialog}\r\n      >\r\n        <DialogTitle>Edit Song</DialogTitle>\r\n        <DialogContent>\r\n          <img\r\n            className={classes.thumbnail}\r\n            src={thumbnail}\r\n            alt=\"song thumbnail\"\r\n          />\r\n          <TextField\r\n            onChange={handleChangeSong}\r\n            margin=\"dense\"\r\n            name=\"title\"\r\n            label=\"Title\"\r\n            fullWidth\r\n            value={title}\r\n            error={handleError(\"title\")}\r\n            helperText={handleError(\"title\") && \"Fill out field\"}\r\n          />\r\n          <TextField\r\n            onChange={handleChangeSong}\r\n            margin=\"dense\"\r\n            name=\"artist\"\r\n            label=\"Artist\"\r\n            fullWidth\r\n            value={artist}\r\n            error={handleError(\"artist\")}\r\n            helperText={handleError(\"artist\") && \"Fill out field\"}\r\n          />\r\n          <TextField\r\n            onChange={handleChangeSong}\r\n            margin=\"dense\"\r\n            name=\"thumbnail\"\r\n            label=\"Thumbnail\"\r\n            fullWidth\r\n            value={thumbnail}\r\n            error={handleError(\"thumbnail\")}\r\n            helperText={handleError(\"thumbnail\") && \"Fill out field\"}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleAddSong}>\r\n            Add Song\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <TextField\r\n        onChange={(event) => setUrl(event.target.value)}\r\n        value={url}\r\n        placeholder=\"Add Youtube or Soundcloud Url\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        type=\"url\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Link className={classes.urlInput} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <Button\r\n        disabled={!playable}\r\n        className={classes.addSongButton}\r\n        onClick={() => setDialog(true)}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        endIcon={<AddBoxOutlined />}\r\n      >\r\n        Add\r\n      </Button>\r\n      <ReactPlayer url={url} hidden={true} onReady={handleEditSong} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddSong;\r\n","import { AppBar, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\r\nimport { HeadsetTwoTone } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar color=\"primary\" position=\"fixed\">\r\n      <Toolbar>\r\n        <HeadsetTwoTone />\r\n        <Typography className={classes.title} variant=\"h6\" component=\"h1\">\r\n          Mories Music Share\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_SONGS = gql`\r\n  subscription getSongs {\r\n    songs(order_by: { created_at: desc }) {\r\n      artist\r\n      duration\r\n      id\r\n      thumbnail\r\n      title\r\n      url\r\n    }\r\n  }\r\n`;\r\n","import { useMutation, useSubscription } from \"@apollo/client\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  CircularProgress,\r\n  IconButton,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Pause, PlayArrow, Save } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { SongContext } from \"../App\";\r\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\";\r\nimport { GET_SONGS } from \"../graphql/subscriptions\";\r\n\r\nfunction SongList() {\r\n  const { data, loading, error } = useSubscription(GET_SONGS);\r\n\r\n  /* const song = {\r\n    title: \"Beats to Study\",\r\n    artist: \"Lofi\",\r\n    thumbnail: \"https://i.ytimg.com/vi/5qap5aO4i9A/hq720_live.jpg\",\r\n  }; */\r\n\r\n  if (loading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          marginTop: 50,\r\n        }}\r\n      >\r\n        <CircularProgress></CircularProgress>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error fetching songs</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {data.songs.map((song) => (\r\n        <Song key={song.id} song={song} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: theme.spacing(3),\r\n  },\r\n\r\n  songInfoContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  songInfo: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  thumbnail: {\r\n    objectFit: \"cover\",\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n}));\r\n\r\nfunction Song({ song }) {\r\n  const classes = useStyles();\r\n  const { state, dispatch } = React.useContext(SongContext);\r\n  const { id, title, artist, thumbnail } = song;\r\n  const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false);\r\n\r\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\r\n    onCompleted: (data) => {\r\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue));\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const isSongPlaying = state.isPlaying && id === state.song.id;\r\n    setCurrentSongPlaying(isSongPlaying);\r\n  }, [id, state.song.id, state.isPlaying]);\r\n\r\n  function handleTogglePlay() {\r\n    dispatch({ type: \"SET_SONG\", payload: { song } });\r\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\r\n  }\r\n\r\n  function handleAddOrRemoveFromQueue() {\r\n    addOrRemoveFromQueue({\r\n      variables: { input: { ...song, __typename: \"Song\" } },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.container}>\r\n      <div className={classes.songInfoContainer}>\r\n        <CardMedia image={thumbnail} className={classes.thumbnail} />\r\n        <div className={classes.songInfo}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {title}\r\n            </Typography>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              color=\"textSecondary\"\r\n            >\r\n              {artist}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <IconButton onClick={handleTogglePlay} size=\"small\" color=\"primary\">\r\n              {currentSongPlaying ? <Pause /> : <PlayArrow />}\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={handleAddOrRemoveFromQueue}\r\n              size=\"small\"\r\n              color=\"secondary\"\r\n            >\r\n              <Save />\r\n            </IconButton>\r\n          </CardActions>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default SongList;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_SONGS = gql`\r\n  query getSongs {\r\n    songs(order_by: { created_at: desc }) {\r\n      artist\r\n      duration\r\n      id\r\n      thumbnail\r\n      title\r\n      url\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_QUEUED_SONGS = gql`\r\n  query getQueuedSongs {\r\n    queue @client {\r\n      id\r\n      duration\r\n      title\r\n      artist\r\n      thumbnail\r\n      url\r\n    }\r\n  }\r\n`;\r\n","import { useMutation } from \"@apollo/client\";\r\nimport {\r\n  Avatar,\r\n  IconButton,\r\n  Typography,\r\n  makeStyles,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\";\r\n\r\nfunction QueuedSongList({ queue }) {\r\n  console.log({ queue });\r\n  const greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\r\n\r\n  // const song = {\r\n  //   title: \"Beats to Study\",\r\n  //   artist: \"Lofi\",\r\n  //   thumbnail: \"https://i.ytimg.com/vi/5qap5aO4i9A/hq720_live.jpg\",\r\n  // };\r\n\r\n  return (\r\n    greaterThanMd && (\r\n      <div style={{ margin: \"10px 0\" }}>\r\n        <Typography color=\"textSecondary\" variant=\"button\">\r\n          QUEUE ({queue.length})\r\n        </Typography>\r\n        {queue.map((song, i) => (\r\n          <QueuedSong key={i} song={song} />\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    width: 44,\r\n    height: 44,\r\n  },\r\n  text: {\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n  },\r\n  container: {\r\n    display: \"grid\",\r\n    gridAutoFlow: \"column\",\r\n    gridTemplateColumns: \"50px auto 50px\",\r\n    gridGap: 12,\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  songInfoContainer: {\r\n    overflow: \"hidden\",\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n});\r\n\r\nfunction QueuedSong({ song }) {\r\n  const classes = useStyles();\r\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\r\n    onCompleted: (data) => {\r\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue));\r\n    },\r\n  });\r\n  const { thumbnail, artist, title } = song;\r\n\r\n  function handleAddOrRemoveFromQueue() {\r\n    addOrRemoveFromQueue({\r\n      variables: { input: { ...song, __typename: \"Song\" } },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Avatar src={thumbnail} alt=\"Song Thumbnail\" className={classes.avatar} />\r\n      <div className={classes.songInfoContainer}>\r\n        <Typography variant=\"subtitle2\" className={classes.text}>\r\n          {title}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n          className={classes.text}\r\n        >\r\n          {artist}\r\n        </Typography>\r\n      </div>\r\n      <IconButton onClick={handleAddOrRemoveFromQueue}>\r\n        <Delete color=\"error\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QueuedSongList;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  IconButton,\r\n  Slider,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Pause, PlayArrow, SkipNext, SkipPrevious } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { SongContext } from \"../App\";\r\nimport { GET_QUEUED_SONGS } from \"../graphql/queries\";\r\nimport QueuedSongList from \"./QueuedSongList\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"0px 15px\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  thumbnail: {\r\n    width: 150,\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n}));\r\n\r\nfunction SongPlayer() {\r\n  const { data } = useQuery(GET_QUEUED_SONGS);\r\n  const reactPlayerRef = React.useRef();\r\n  const { state, dispatch } = React.useContext(SongContext);\r\n  const [played, setPlayed] = React.useState(0);\r\n  const [playedSeconds, setPlayedSeconds] = React.useState(0);\r\n  const [seeking, setSeeking] = React.useState(false);\r\n  const [positionInQueue, setPositionInQueue] = React.useState(0);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    const songIndex = data.queue.findIndex((song) => song.id === state.song.id);\r\n    setPositionInQueue(songIndex);\r\n  }, [state.song.id, data.queue]);\r\n\r\n  React.useEffect(() => {\r\n    const nextSong = data.queue[positionInQueue + 1];\r\n    if (played >= 0.99 && nextSong) {\r\n      setPlayed(0);\r\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\r\n    }\r\n  }, [data.queue, played, positionInQueue, dispatch]);\r\n\r\n  function handleTogglePlay() {\r\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\r\n  }\r\n\r\n  function handleProgressChange(event, newValue) {\r\n    setPlayed(newValue);\r\n  }\r\n\r\n  function handleSeekMouseDown() {\r\n    setSeeking(true);\r\n  }\r\n\r\n  function handleSeekMouseUp() {\r\n    setSeeking(false);\r\n    reactPlayerRef.current.seekTo(played);\r\n  }\r\n\r\n  function formatDuration(seconds) {\r\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\r\n  }\r\n\r\n  function handlePlayPrevSong() {\r\n    const prevSong = data.queue[positionInQueue - 1];\r\n    if (prevSong) {\r\n      dispatch({ type: \"SET_SONG\", payload: { song: prevSong } });\r\n    }\r\n  }\r\n\r\n  function handlePlayNextSong() {\r\n    const nextSong = data.queue[positionInQueue + 1];\r\n    if (nextSong) {\r\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card variant=\"outlined\" className={classes.container}>\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography variant=\"h5\" component=\"h3\">\r\n              {state.song.title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\r\n              {state.song.artist}\r\n            </Typography>\r\n          </CardContent>\r\n          <div className={classes.controls}>\r\n            <IconButton onClick={handlePlayPrevSong}>\r\n              <SkipPrevious />\r\n            </IconButton>\r\n            <IconButton onClick={handleTogglePlay}>\r\n              {state.isPlaying ? (\r\n                <Pause className={classes.playIcon} />\r\n              ) : (\r\n                <PlayArrow className={classes.playIcon} />\r\n              )}\r\n            </IconButton>\r\n            <IconButton onClick={handlePlayNextSong}>\r\n              <SkipNext />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\r\n              {formatDuration(playedSeconds)}\r\n            </Typography>\r\n          </div>\r\n          <Slider\r\n            onMouseDown={handleSeekMouseDown}\r\n            onMouseUp={handleSeekMouseUp}\r\n            onChange={handleProgressChange}\r\n            value={played}\r\n            type=\"range\"\r\n            min={0}\r\n            max={1}\r\n            step={0.01}\r\n          />\r\n        </div>\r\n        <ReactPlayer\r\n          ref={reactPlayerRef}\r\n          onProgress={({ played, playedSeconds }) => {\r\n            if (!seeking) {\r\n              setPlayed(played);\r\n              setPlayedSeconds(playedSeconds);\r\n            }\r\n          }}\r\n          url={state.song.url}\r\n          playing={state.isPlaying}\r\n          hidden\r\n        />\r\n        <CardMedia className={classes.thumbnail} image={state.song.thumbnail} />\r\n      </Card>\r\n      <QueuedSongList queue={data.queue} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SongPlayer;\r\n","function songReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"PLAY_SONG\": {\r\n      return {\r\n        ...state,\r\n        isPlaying: true,\r\n      };\r\n    }\r\n    case \"PAUSE_SONG\": {\r\n      return {\r\n        ...state,\r\n        isPlaying: false,\r\n      };\r\n    }\r\n    case \"SET_SONG\": {\r\n      return {\r\n        ...state,\r\n        song: action.payload.song,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default songReducer;\r\n","import { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddSong from \"./components/AddSong\";\r\nimport Header from \"./components/Header\";\r\nimport SongList from \"./components/SongList\";\r\nimport SongPlayer from \"./components/SongPlayer\";\r\nimport songReducer from \"./reducer\";\r\n\r\nexport const SongContext = React.createContext({\r\n  song: {\r\n    id: \"1434c455-1f8e-460e-b31a-9d7759e69212\",\r\n    title: \"Shine On\",\r\n    artist: \"Pink Floyd\",\r\n    duration: \"1322\",\r\n    thumbnail:\r\n      \"https://i.ytimg.com/vi/cWGE9Gi0bB0/hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&rs=AOn4CLBrrXOrpAUt5wbhlkgrhGTvuKSwdQ\",\r\n    url: \"https://www.youtube.com/watch?v=cWGE9Gi0bB0\",\r\n  },\r\n  isPlaying: false,\r\n});\r\n\r\nfunction App() {\r\n  const initialSongState = React.useContext(SongContext);\r\n  const [state, dispatch] = React.useReducer(songReducer, initialSongState);\r\n  const greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\r\n\r\n  return (\r\n    <SongContext.Provider value={{ state, dispatch }}>\r\n      <Header />\r\n      <Grid container spacing={3}>\r\n        <Grid\r\n          style={{\r\n            paddingTop: \"80px\",\r\n          }}\r\n          item\r\n          xs={12}\r\n          md={7}\r\n        >\r\n          <AddSong />\r\n          <SongList />\r\n        </Grid>\r\n        <Grid\r\n          style={\r\n            greaterThanMd\r\n              ? {\r\n                  position: \"fixed\",\r\n                  width: \"100%\",\r\n                  right: 0,\r\n                  top: \"70px\",\r\n                }\r\n              : {\r\n                  position: \"fixed\",\r\n                  width: \"100%\",\r\n                  left: 0,\r\n                  bottom: 0,\r\n                }\r\n          }\r\n          item\r\n          xs={12}\r\n          md={5}\r\n        >\r\n          <SongPlayer />\r\n        </Grid>\r\n      </Grid>\r\n    </SongContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { teal, purple } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: teal,\r\n    secondary: purple,\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import { ApolloClient, gql, InMemoryCache } from \"@apollo/client\";\r\nimport { WebSocketLink } from \"apollo-link-ws\";\r\nimport { GET_QUEUED_SONGS } from \"./queries\";\r\n\r\nconst client = new ApolloClient({\r\n  link: new WebSocketLink({\r\n    uri: \"wss://mories-music-share.herokuapp.com/v1/graphql\",\r\n    options: {\r\n      reconnect: true,\r\n    },\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  typeDefs: gql`\r\n    type Song {\r\n      id: uuid!\r\n      title: String!\r\n      artist: String!\r\n      thumbnail: String!\r\n      duration: Float!\r\n      url: String!\r\n    }\r\n\r\n    input SongInput {\r\n      id: uuid!\r\n      title: String!\r\n      artist: String!\r\n      thumbnail: String!\r\n      duration: Float!\r\n      url: String!\r\n    }\r\n\r\n    type Query {\r\n      queue: [Song]!\r\n    }\r\n\r\n    type Mutation {\r\n      addOrRemoveFromQueue(input: SongInput!): [Song]!\r\n    }\r\n  `,\r\n  resolvers: {\r\n    Mutation: {\r\n      addOrRemoveFromQueue: (_, { input }, { cache }) => {\r\n        const queryResult = cache.readQuery({\r\n          query: GET_QUEUED_SONGS,\r\n        });\r\n        if (queryResult) {\r\n          const { queue } = queryResult;\r\n          const isInQueue = queue.some((song) => song.id === input.id);\r\n          const newQueue = isInQueue\r\n            ? queue.filter((song) => song.id !== input.id)\r\n            : [...queue, input];\r\n          cache.writeQuery({\r\n            query: GET_QUEUED_SONGS,\r\n            data: { queue: newQueue },\r\n          });\r\n          return newQueue;\r\n        }\r\n        return [];\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst hasQueue = Boolean(localStorage.getItem(\"queue\"));\r\n\r\nconst data = {\r\n  queue: hasQueue ? JSON.parse(localStorage.getItem(\"queue\")) : [],\r\n};\r\n\r\nclient.writeQuery({\r\n  query: GET_QUEUED_SONGS,\r\n  data: data,\r\n});\r\n\r\nexport default client;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { CssBaseline, MuiThemeProvider } from \"@material-ui/core\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport theme from \"./theme\";\r\nimport client from \"./graphql/client\";\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </MuiThemeProvider>\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}